{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"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","sourcesContent":["import {Observable, Subscriber} from 'rxjs';\nimport {\n  Adapter,\n  AdapterFactory,\n  AdapterOpenOptions,\n  ScanParameters,\n  ConnectionOptions,\n  Device,\n  Service,\n  Characteristic\n} from 'pc-ble-driver-js';\n\nfunction toHexString(byteArray) {\n  return byteArray.map(function(byte) {\n    return ('0' + (byte & 0xFF).toString(16)).slice(-2);\n  }).join('');\n}\n\nexport enum AdapterFactoryEventType {\n  Added,\n  Removed\n}\n\nexport interface AdapterEvent {\n  adapter: Adapter;\n  eventType: AdapterFactoryEventType;\n}\n\nexport function adapaterFactoryObservable(\n  adapterFactory: AdapterFactory): Observable<AdapterEvent> {\n\n  return Observable.create((obs: Subscriber<AdapterEvent>) => {\n\n    function onAdded(adapter) {\n      obs.next({\n        adapter,\n        eventType: AdapterFactoryEventType.Added\n      });\n    }\n\n    function onRemoved(adapter) {\n      obs.next({\n        adapter,\n        eventType: AdapterFactoryEventType.Removed\n      });\n    }\n\n    adapterFactory.on('added', onAdded);\n    adapterFactory.on('removed', onRemoved);\n\n    return () => {\n      adapterFactory.removeListener('added', onAdded);\n      adapterFactory.removeListener('removed', onRemoved);\n    };\n  });\n}\n\nexport function openAdapaterObservable(adapter: Adapter,\n  openOptions?: AdapterOpenOptions): Observable<Adapter> {\n\n  return Observable.create((obs: Subscriber<any>) => {\n\n    adapter.open(openOptions, (error) => {\n      if (error) {\n        obs.error(error);\n        return;\n      }\n      obs.next(adapter);\n    });\n\n    return () => {\n    };\n  });\n}\n\nexport function startScanDevicesObservable(adapter: Adapter,\n  scanOptions: ScanParameters): Observable<Device> {\n\n  return Observable.create((obs: Subscriber<Device>) => {\n\n    function onDeviceDiscovered(device: Device) {\n      obs.next(device);\n    }\n\n    adapter.on('deviceDiscovered', onDeviceDiscovered);\n\n    adapter.startScan(scanOptions, (error) => {\n      if (error) {\n        obs.error(error);\n        return;\n      }\n    });\n\n    return () => {\n      adapter.removeListener('deviceDiscovered', onDeviceDiscovered);\n    };\n  });\n}\n\n\nexport function stopScanDevicesObservable(adapter: Adapter): Observable<void> {\n  return Observable.create((obs: Subscriber<void>) => {\n\n    adapter.getState((err, state) => {\n      if (state.scanning === true) {\n        adapter.stopScan((error) => {\n          if (error) {\n            obs.error(error);\n            return;\n          }\n          obs.next();\n        });\n      } else {\n        obs.next();\n      }\n    });\n\n    return () => {\n\n    };\n  });\n}\n\nexport function discoverServicesObservable(adapter: Adapter, device: Device): Observable<Service> {\n  return Observable.create((obs: Subscriber<Service>) => {\n    adapter.getServices(device.instanceId, (err, services) => {\n      if (err) {\n        obs.error(err);\n        return;\n      }\n      services.forEach((s) => obs.next(s));\n    });\n\n    return () => {\n    };\n  });\n}\n\nexport function discoverCharacteristicObservable(adapter: Adapter,\n  service: Service): Observable<Characteristic> {\n\n  return Observable.create((obs: Subscriber<Characteristic>) => {\n    adapter.getCharacteristics(service.instanceId, (err, chars) => {\n      if (err) {\n        obs.error(err);\n        return;\n      }\n      chars.forEach(c => obs.next(c));\n    });\n\n    return () => {\n    };\n  });\n}\n\nexport function readCharacteristicObservable(adapter: Adapter,\n  characteristic: Characteristic): Observable<String> {\n\n  return Observable.create((obs: Subscriber<string>) => {\n\n    adapter.readCharacteristicValue(characteristic.instanceId, (err, value) => {\n      if (err) {\n        obs.error(err);\n        return;\n      }\n      obs.next(toHexString(value));\n    });\n\n    return () => {\n    };\n  });\n}\n\nexport function connectDeviceObservable(adapter: Adapter, device: Device,\n  options: ConnectionOptions): Observable<Device> {\n\n  return Observable.create((obs: Subscriber<Device>) => {\n\n    function onDeviceConnected(connectedDevice) {\n      obs.next(connectedDevice);\n    }\n\n    adapter.on('deviceConnected', onDeviceConnected);\n\n    adapter.connect(device.address, options, (err) => {\n      if (err) {\n        obs.error(err);\n        return;\n      }\n    });\n\n    return () => {\n      adapter.removeListener('deviceConnected', onDeviceConnected);\n    };\n  });\n}\n\nexport function disconnectDeviceObservable(adapter: Adapter, device: Device): Observable<void> {\n\n  return Observable.create((obs: Subscriber<void>) => {\n    adapter.disconnect(device.instanceId, (err) => {\n      if (err) {\n        obs.error(err);\n        return;\n      }\n      obs.next();\n    });\n\n    return () => {\n    };\n  });\n}\n"]}